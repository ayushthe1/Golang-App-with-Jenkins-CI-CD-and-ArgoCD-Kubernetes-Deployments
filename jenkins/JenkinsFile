pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                sh 'echo "Checking out code..."'
            }
        }

        stage('Build and Push Docker Image') {
        agent any
        environment {
          DOCKER_IMAGE = "ayushthe1/go-app:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-app-and-manifest/spring-boot-app/Dockerfile"
        // Create the docker cred in the jenkins managed credentials
          REGISTRY_CREDENTIALS = credentials('docker-cred')
        }
        steps {
          script {
            sh 'cd go-app/ && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "planetai-assignment"
                GIT_USER_NAME = "ayushthe1"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "ayush.jenkins@gmail.com"
                        git config user.name "Ayush"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/{{BUILD_NUMBER}}/${BUILD_NUMBER}/g" manifests/deployment.yml
                        git add manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
